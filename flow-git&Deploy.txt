git init
Cambiar la rama master por main
git branch -m master main
git push origin --delete master


git add .
git commit -m "first commit"
git remote add origin https://github.com/Honcito/mern-thinkboard.git
git push -u origin main

Para el deployment creamos un package.json en la raiz del proyecto para manejar backend y frontend
npm init -y

package.json: 
    {
  "name": "mern-thinkboard",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Honcito/mern-thinkboard.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/Honcito/mern-thinkboard/issues"
  },
  "homepage": "https://github.com/Honcito/mern-thinkboard#readme",
  "description": "",
  "dependencies": {
    "mern-thinkboard": "file:"
  }
}

npm run build

cambiarlo a: "scripts": {
    "build": "npm install --prefix backend && npm install --prefix frontend"
  },
  y volverlo a cambiar: 
    "scripts": {
    "build": "npm install --prefix backend && npm install --prefix frontend && npm run build --prefix frontend"
  },

  npm run build

  Tenemos el backend en localhost:5001 y el frontend en localhost:5173 y queremos tenerlo bajo el mismo dominio
  en el server.js
    import path from 'path'

    creamos const __dirname = path.resolve();

    debajo de app.use("/api/notes", notesRoutes);

    Si la aplicación corre en producción...

    if(process.env.NODE_ENV === "production"){
  app.use(express.static(path.join(__dirname, "../frontend/dist")))

  app.get("*", (req, res) => {
    res.sendFile(path.join(__dirname, "../frontend", "dist", "index.html"))
    });
    };


    Si no corre en producción...

    // Si no lanzamos la aplicación en producción...
if(process.env.NODE_ENV !== "production"){
app.use(cors({
  origin:"http://localhost:5173",
}))
}

Añadir en el .env del backend
NODE_ENV=development // en caso contrario se cambia a production

npm run build

npm run start
y abrimos localhost:5001 y nos aparece la aplicación corriendo en una sola url

en /lib/axios.js:
  // in production, there's no localhost so we have to make this dynamic
  const BASE_URL = inport.meta.env.MODE === "development" ? "http://localhost:5001/api" : "/api"

  quedaría asi:
  import axios from 'axios'

// in production, there's no localhost so we have to make this dynamic
  const BASE_URL = import.meta.env.MODE === "development" ? "http://localhost:5001/api" : "/api";

const api = axios.create({
  //baseURL: "http://localhost:5001/api"
  baseURL: BASE_URL,
});


export default api;


A. Ve a https://dashboard.render.com
B. Haz clic en tu avatar (esquina superior derecha) → Account Settings → GitHub
C. Presiona el botón "Manage GitHub Permissions"
D. Se abrirá GitHub → selecciona "Only select repositories" y marca mern-thinkboard
E. Guarda los cambios y regresa a Render